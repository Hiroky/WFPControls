<UserControl x:Class="WpfApplication1.PaletteUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApplication1"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	
    <UserControl.Resources>

        <!--ListBoxItem style-->
        <Style x:Key="itemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="IsSelected" Value="{Binding IsSelected}"/>
			
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="border" 
								MouseDown="border_MouseDown"
								MouseMove="border_MouseMove"
								MouseUp="border_MouseUp">
                            <ContentPresenter Margin="18 0 0 0" />
                        </Border>
						
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF464649"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFDA8200"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		
		<!--Expander style-->
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <Grid SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Path x:Name="arrow" 
										  Data="M0.5,0.5 L0.5,10.125 5.625,5.25 z"
										  HorizontalAlignment="Center" 
										  SnapsToDevicePixels="false" 
										  StrokeThickness="1" 
										  Stroke="Gray"
										  VerticalAlignment="Center"/>
                               </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="2,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M7.3670838,0.50000001 L0.49999999,7.1882694 7.3672528,7.1882697 z"/>
                                <Setter Property="Fill" TargetName="arrow" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF464649"/>
                            </Trigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" 
											  ContentTemplate="{TemplateBinding HeaderTemplate}" 
											  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
											  Content="{TemplateBinding Header}" 
											  DockPanel.Dock="Top" 
											  Foreground="{TemplateBinding Foreground}" 
											  Background="{TemplateBinding Background}"
											  FontWeight="Bold" 
											  FontStyle="{TemplateBinding FontStyle}" 
											  FontStretch="{TemplateBinding FontStretch}" 
											  FontSize="{TemplateBinding FontSize}" 
											  FontFamily="{TemplateBinding FontFamily}" 
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
											  Margin="0" 
											  MinWidth="0" 
											  MinHeight="0" 
											  Padding="{TemplateBinding Padding}" 
											  Style="{StaticResource ExpanderUpHeaderStyle}" 
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								
                                <Border x:Name="PresenterBorder" 
										Padding="{TemplateBinding Padding}"
										CornerRadius="0 0 5 5"
										Visibility="Collapsed" >
                                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </DockPanel>
                        </Border>
						
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="PresenterBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

	
	<!--Template-->
    <DockPanel>

		<!--Search box-->
        <TextBox DockPanel.Dock="Top" 
				 Background="#FFCCCCCC"
				 FontSize="13.333"
				 Margin="2"
				 Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}"
				 >
            <TextBox.Template>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <Label Name="watermark" Content="Search" Padding="3 0 0 0" Foreground="gray" Visibility="Collapsed" FontSize="12"></Label>
                            <Path Data="M71.886236,15.500001 C52.832413,15.500001 37.386236,30.946177 37.386236,50.000001 37.386236,69.053826 52.832413,84.500001 71.886236,84.500001 90.940062,84.500001 106.38624,69.053826 106.38624,50.000001 106.38624,30.946177 90.940062,15.500001 71.886236,15.500001 z M71.886236,0.5 C99.224333,0.50000054 121.38624,22.661906 121.38624,50.000001 121.38624,77.338097 99.224333,99.500001 71.886236,99.500001 60.780134,99.500001 50.528307,95.842423 42.269596,89.6661 L42.224993,89.631905 14.217165,117.63973 0.5,103.92257 29.256211,75.166359 28.944418,74.63897 C24.77232,67.383324 22.386236,58.970315 22.386235,50.000001 22.386236,22.661906 44.548141,0.50000054 71.886236,0.5 z" 
								  Fill="#FF1F1F1F" 
								  VerticalAlignment="Center"
								  HorizontalAlignment="Right" 
								  Stretch="Fill" 
								  Width="16" 
								  Height="16"
								  Margin="0 1 1 1"
								  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </TextBox.Template>
        </TextBox>

		<!--Palette-->
        <ListBox ItemsSource="{Binding ItemsView}"
				 ItemContainerStyle="{StaticResource itemStyle}"
				 Background="#FF252526"
				 BorderBrush="{x:Null}" 
				 BorderThickness="0"
				 Padding="5 0 5 5"
				 >
			<!--Group style-->
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Header="{Binding Name}" 
												  Style="{StaticResource ExpanderStyle1}"
												  Foreground="#FFC5C5C5"
												  FontSize="13.2"
												  IsExpanded="True">
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>

            <!--items template-->
            <ListBox.ItemTemplate>
                <DataTemplate DataType="local:PaletteItemViewModel">
                    <Label Name="label" Content="{Binding Name}" Foreground="#FFC5C5C5" FontSize="13.2" Padding="1" />

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Foreground"  TargetName="label" Value="Black"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
			</ListBox.ItemTemplate>
			
        </ListBox>

    </DockPanel>
	
</UserControl>
